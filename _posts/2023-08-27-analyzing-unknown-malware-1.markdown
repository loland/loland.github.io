---
layout: post
title:  "Analyzing Unknown Malware 1"
date:   2023-08-27 00:00:00 +0000
categories: malware
---
Back with another malware sample from [MalwareBazaar](https://bazaar.abuse.ch/sample/87c160843bc0bdcd754a151c288f899763494385830016c299245f1fe9354b54/)! An executable, this time. With an interesting icon. Performing a Google Image Reverse Search on the icon provides no clues to its origin. Incredibly strange.


![icon](/assets/post_assets/analyzing-unknown-malware-1/logo.png)

### 1. Preliminary Static Analysis
Jumping right into the investigation with some static analysis. To get a feel of the sample before diving deep into technical reversing and detonation.

<br>
#### 1.1 Packing
Running PEiD to identify packed binaries. High entropies like 7.88 are usually reliable indicators of packing. PEiD also detected the use of `UPX` (the Ultimate Packer for eXecutables).
![peid](/assets/post_assets/analyzing-unknown-malware-1/peid.png)

<br>
Wasting no time. I attempted to unpack the binary with the command `upx -d malware.exe` without success. This raises the question of whether the binary was really packed with UPX, or simply disguising as such. Alternatively, it could just be a general error.

{% highlight powershell %}
C:\Users\root\Desktop>upx -d malware.exe
                       Ultimate Packer for eXecutables
                          Copyright (C) 1996 - 2023
UPX 4.1.0       Markus Oberhumer, Laszlo Molnar & John Reiser    Aug 8th 2023

        File size         Ratio      Format      Name
   --------------------   ------   -----------   -----------
upx: malware.exe: NotPackedException: not packed by UPX

Unpacked 0 files.
{% endhighlight %}

<br>
#### 1.2 Section Information
Viewing section information with `pestudio` reveals interesting information.
+ Entry point is in .rmnet, a non-standard section name.
+ UPX0 & UPX1 sections present, standard in UPX packed binaries. However, the section .rmnet is not a UPX standard.
+ 3 executable sections, UPX0, UPX1 & .rmnet.
+ High entropy in 2 sections, UPX1 and .rmnet.  
<br>
![peid](/assets/post_assets/analyzing-unknown-malware-1/pestudio_sections.png)

<br>
#### 1.3 Strings
Extracting strings with the command `floss malware.exe`. The following stand out. The binary appears to have networking capabilities. And a hardcoded domain `96.blog.hexun.com`.

{% highlight powershell %}
96.blog.hexun.com
zilla/4.0 (Tpatixe; MSIE 
HTTP/1.1
/VIP
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0"><assemblyIdentity name="E.App" processorArchitecture="x86" version="5.2.0.0" type="win32"/><dependency><dependentAssembly><assemblyIdentity type="win32" name="Microsoft.Windows.Common-Controls" version="6.0.0.0" processorArchitecture="x86" publicKeyToken="6595b64144ccf1df" language="*" /></dependentAssembly></dependency></assembly>
Srv.exe
{% endhighlight %}

<br>
### 2. Detonation
![exec](/assets/post_assets/analyzing-unknown-malware-1/exec1.png)
#### 1.1 Indicators